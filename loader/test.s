; A test routine which can be loaded and executed using this loader.

; Copyright (c) 2025 Piers Finlayson <piers@piers.rocks>
;
; Licensed under the MIT License.  See [LICENSE] for details.

.export do_test_routine

SCREEN_RAM = $8000
COLS = 40
FIRST_LINE = 12
FIRST_CHAR = 14
START_POINT_1 = (COLS*FIRST_LINE) + FIRST_CHAR
START_POINT_2 = (COLS*(FIRST_LINE+1)) + FIRST_CHAR
START_POINT_3 = (COLS*(FIRST_LINE+2)) + FIRST_CHAR

; Prints a string to the screen
;
; Deliberately very straightforward, with no absolute addressing, so it can be
; loaded and run from anywhere in RAM.
do_test_routine:
    LDA #$10
    STA SCREEN_RAM+START_POINT_2
    LDA #$09
    STA SCREEN_RAM+START_POINT_2+1
    LDA #$05
    STA SCREEN_RAM+START_POINT_2+2
    LDA #$12
    STA SCREEN_RAM+START_POINT_2+3
    LDA #$13
    STA SCREEN_RAM+START_POINT_2+4
    LDA #$2E
    STA SCREEN_RAM+START_POINT_2+5
    LDA #$12
    STA SCREEN_RAM+START_POINT_2+6
    LDA #$0F
    STA SCREEN_RAM+START_POINT_2+7
    LDA #$03
    STA SCREEN_RAM+START_POINT_2+8
    LDA #$0B
    STA SCREEN_RAM+START_POINT_2+9
    LDA #$13
    STA SCREEN_RAM+START_POINT_2+10

    LDA #$2D
    ; 11 times
    STA SCREEN_RAM+START_POINT_1
    STA SCREEN_RAM+START_POINT_3
    STA SCREEN_RAM+START_POINT_1+1
    STA SCREEN_RAM+START_POINT_3+1
    STA SCREEN_RAM+START_POINT_1+2
    STA SCREEN_RAM+START_POINT_3+2
    STA SCREEN_RAM+START_POINT_1+3
    STA SCREEN_RAM+START_POINT_3+3
    STA SCREEN_RAM+START_POINT_1+4
    STA SCREEN_RAM+START_POINT_3+4
    STA SCREEN_RAM+START_POINT_1+5
    STA SCREEN_RAM+START_POINT_3+5
    STA SCREEN_RAM+START_POINT_1+6
    STA SCREEN_RAM+START_POINT_3+6
    STA SCREEN_RAM+START_POINT_1+7
    STA SCREEN_RAM+START_POINT_3+7
    STA SCREEN_RAM+START_POINT_1+8
    STA SCREEN_RAM+START_POINT_3+8
    STA SCREEN_RAM+START_POINT_1+9
    STA SCREEN_RAM+START_POINT_3+9
    STA SCREEN_RAM+START_POINT_1+10
    STA SCREEN_RAM+START_POINT_1+11

    RTS
