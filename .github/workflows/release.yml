name: Create Release

on:
  push:
    tags:
      - 'v*'  # Triggers on tags that start with 'v' (e.g., v1.0, v0.2.3)

permissions:
  contents: write  # This is required for creating releases

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install CA65 and VICE dependencies
        run: sudo apt-get update && sudo apt-get install -y cc65 gawk make vice
      
      - name: Get tag name
        id: get_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      
      - name: Extract release notes from CHANGELOG.md
        id: extract_release_notes
        run: |
          # Remove the 'v' prefix if it exists
          VERSION=${TAG#v}
          
          # Check if version exists in CHANGELOG.md
          if grep -q "## $VERSION" CHANGELOG.md; then
            # Get line number of current version
            CURRENT_LINE=$(grep -n "## $VERSION" CHANGELOG.md | cut -d: -f1)
            
            # Get line number of next version (if any)
            NEXT_LINE=$(awk "NR>$CURRENT_LINE && /^## [0-9]+\.[0-9]+\.[0-9]+/ {print NR; exit}" CHANGELOG.md)
            
            if [ -z "$NEXT_LINE" ]; then
              # This is the last or only version section
              NOTES=$(tail -n +$CURRENT_LINE CHANGELOG.md)
            else
              # Extract content between current and next version
              NEXT_LINE=$((NEXT_LINE - 1))
              LINES_TO_EXTRACT=$((NEXT_LINE - CURRENT_LINE + 1))
              NOTES=$(head -n $NEXT_LINE CHANGELOG.md | tail -n $LINES_TO_EXTRACT)
            fi
            
            # Check if section is empty (only contains header and empty lines)
            if [ -z "$(echo "$NOTES" | grep -v "^## $VERSION" | grep -v "^$")" ]; then
              echo "Warning: No content found for version $VERSION in CHANGELOG.md"
              NOTES="## $VERSION\n\nNo changelog entries for this version yet."
            fi
          else
            echo "Warning: Version $VERSION not found in CHANGELOG.md"
            NOTES="## $VERSION\n\nNo changelog entries found for this version."
          fi
          
          # Save notes to file and GITHUB_OUTPUT with proper multiline handling
          echo -e "$NOTES" > release_notes.md
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build Release Binaries
        run: |
          make sender-release
          
          # Prepare the release binary with proper name including arch and version
          mkdir -p releases
          cp sender/target/release/sender releases/sender-x86_64-linux-${{ env.TAG }}

      - name: Build Loader
        run: |
          make loader
          cp loader/build/7c00-loader.prg releases/
          cp loader/build/loader.d64 releases/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            releases/sender-x86_64-linux-${{ env.TAG }}
            releases/7c00-loader.prg
            releases/loader.d64
          draft: false
          prerelease: false
